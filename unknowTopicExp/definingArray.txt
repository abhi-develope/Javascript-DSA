
Ways to Create Arrays in JavaScript:

1. Using Array Literals (Most Common):
-------------------------------------------------
const arr = [1, 2, 3, 4];
- The most common and straightforward way of creating an array using square brackets [].

2. Using the Array Constructor:
-------------------------------------------------
const arr = new Array(1, 2, 3, 4);
- Using the Array constructor to create an array by passing individual values as arguments.

Example:
const arr = new Array(5); // Creates an empty array with 5 undefined slots.

3. Using Array.of():
-------------------------------------------------
const arr = Array.of(1, 2, 3, 4);
- Creates a new array with the exact elements you pass, regardless of the number or type of arguments.

4. Using Array.from():
-------------------------------------------------
const arr = Array.from([1, 2, 3, 4]);
- Creates a new array from an array-like or iterable object (e.g., string, NodeList, Set).

Example with a string:
const arr = Array.from('hello'); // ['h', 'e', 'l', 'l', 'o']

5. Using the fill() Method:
-------------------------------------------------
const arr = new Array(4).fill(0);
- Creates an array of a certain size and initializes all elements to a particular value using fill().

6. Using the splice() Method:
-------------------------------------------------
const originalArr = [1, 2, 3, 4, 5];
const newArr = originalArr.splice(1, 3); // Creates an array with elements from index 1 to 3.

7. Using Array.prototype.push() (Indirect Method):
-------------------------------------------------
const arr = [];
arr.push(1); 
arr.push(2);
arr.push(3);
- Dynamically create and build an array using push().

8. Using spread operator to Copy or Concatenate Arrays:
-------------------------------------------------
const arr1 = [1, 2, 3];
const arr2 = [...arr1, 4, 5, 6]; // [1, 2, 3, 4, 5, 6]
- The spread operator ... is used to create new arrays by copying or merging existing arrays.

9. Using Array.concat():
-------------------------------------------------
const arr1 = [1, 2];
const arr2 = [3, 4];
const arr = arr1.concat(arr2); // [1, 2, 3, 4]
- concat() is used to merge two or more arrays.

10. Using split() Method to Create an Array from a String:
-------------------------------------------------
const str = "1,2,3,4";
const arr = str.split(","); // ["1", "2", "3", "4"]
- Creates an array from a string by splitting it based on a delimiter.

11. Using map():
-------------------------------------------------
const arr = Array(5).fill(0).map((_, i) => i + 1); // [1, 2, 3, 4, 5]
- Useful for generating arrays programmatically, especially to initialize them with specific values.
